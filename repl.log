""  
(1..10).to_a
(1.1.10).to_a
(1..10..1).to_a
Range::1..10
(1..10).step(2)
(1..10).step(2).to_a
10.times
10.times.to_a
1==1==2
1==1
1==1 && 1 == 2
[1,2,3].sort
[1,3,2,3].sort
[1,3,2,3].select(|x| x == 1)
[1,3,2,3].select(|x| true)
[1,3,2,3].select
[1,3,2,3].select(|x| x==1)
[1,3,2,3].select{|x| x==1}
[1,3,2,3].select{|x| x==1}.count
(2..6).to_a
(2..6).to_a do |current| puts current end
(2..6).to_a.each do |current| puts current end
(2..6).to_a.delete 1
(1..6).to_a.delete 1
[1,2,3,4,5,1].delete 1
x = [1,2,3,4,5,1]
x.delete 1
x
x.detect
x.detect.each |x| puts x end
x.detect.each {|x| puts x }
help detect
help x.detect
x = [1,2,3,4,5,1]
count = 1
x.delete_if {|x| x==1 && count > 0}
x
x.index(1)
x.index(2)
x = [1,2,3,4,5,1]
x.index(1)
x.delete_at 0
x
x.sort
load Dog
load about_classes
load "about_classes"
load "about_classes.rb"
Dog.new
load "about_classes.rb"
Dog.new
Dog2.new
AboutClasses::Dog2.new
AboutClasses::Dog2.new.class
AboutClasses::Dog2.instance_variable
AboutClasses::Dog2.instance_variables
AboutClasses::Dog2.new
AboutClasses::Dog2.new.instance_variables
dog = AboutClasses::Dog2.new
dog.instance_variables
dog.set_name "fido"
dog.instance_variables
[].push 1
[] << 1
Random::new
Random::new.ta
Random::new.tap
Random::new.tap {|x| puts x}
Random::new.methods
Random::new.rand
Random::new.rand*6
Random::new.rand*6+1
(Random::new.rand*6+1).floor
def rand() (Random::new.rand*6+1).floor end
rand()
result = []
1000.times do |x| result[rand()]++ end
1000.times do |x| result[rand()] += 1 end
rand << 0
result << 0
1000.times do |x| result[rand()] += 1 end
result
def rand() (Random::new.rand*6+1).floor end
load "about_dice_project"
load "about_dice_project.rb"
ds =DiceSet.new
ds.roll
ds.roll(5)
ds.values
ds.roll(5)
ds.values
assert_not_equal
